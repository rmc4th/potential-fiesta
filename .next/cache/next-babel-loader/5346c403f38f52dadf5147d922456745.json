{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodney\\\\mitXPro\\\\MERN2021-01\\\\w28\\\\28.9_G-Ql\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useContext, useState } from \"react\";\nimport Head from \"next/head\";\nimport AppContext from \"../components/context\";\nimport Home from \"./index\";\nimport Layout from \"../components/layout\";\nimport Cookie from \"js-cookie\";\n\nfunction MyApp(props) {\n  var {\n    cart,\n    addItem,\n    removeItem,\n    user,\n    setUser\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    cart: cart\n  });\n  const {\n    Component,\n    pageProps\n  } = props; // more my stuff\n\n  console.log(\"_MyApp> user: \", user);\n  /*\r\n  setUser = (user) => {\r\n    setState({ user });\r\n      // more my stuff\r\n  console.log(\"_app > setUser-setState\", state);\r\n  };\r\n  */\n\n  setUser = userToSet => {\n    //  setState({ user });\n    console.log(\"_app > setUser-setState\", userToSet);\n    console.log(\"_app > AppContext: \", AppContext);\n    user = userToSet; // more my stuff\n  };\n\n  addItem = item => {\n    let {\n      items\n    } = state.cart; //check for item already in cart\n    //if not in cart, add item if item is found increase quanity ++\n\n    let foundItem = true;\n\n    if (items.length > 0) {\n      foundItem = items.find(i => i.id === item.id);\n      if (!foundItem) foundItem = false;\n    } else {\n      foundItem = false;\n    }\n\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`); // if item is not new, add to cart, set quantity to 1\n\n    if (!foundItem) {\n      //set quantity property to 1\n      let temp = JSON.parse(JSON.stringify(item));\n      temp.quantity = 1;\n      var newCart = {\n        items: [...state.cart.items, temp],\n        total: state.cart.total + item.price\n      };\n      setState({\n        cart: newCart\n      });\n      console.log(`Total items: ${JSON.stringify(newCart)}`);\n    } else {\n      // we already have it so just increase quantity ++\n      console.log(`Total so far:  ${state.cart.total}`);\n      newCart = {\n        items: items.map(item => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity + 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total + item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    }); // problem is this is not updated yet\n\n    console.log(`state reset to cart:${JSON.stringify(state)}`);\n  };\n\n  removeItem = item => {\n    let {\n      items\n    } = state.cart; //check for item already in cart\n\n    const foundItem = items.find(i => i.id === item.id);\n\n    if (foundItem.quantity > 1) {\n      var newCart = {\n        items: items.map(item => {\n          if (item.id === foundItem.id) {\n            return Object.assign({}, item, {\n              quantity: item.quantity - 1\n            });\n          } else {\n            return item;\n          }\n        }),\n        total: state.cart.total - item.price\n      }; //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\n    } else {\n      // only 1 in the cart so remove the whole item\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`);\n      const index = items.findIndex(i => i.id === foundItem.id);\n      items.splice(index, 1);\n      var newCart = {\n        items: items,\n        total: state.cart.total - item.price\n      };\n    }\n\n    setState({\n      cart: newCart\n    });\n  };\n\n  return (//    <AppContext.Provider value={{cart: state.cart, addItem: addItem, removeItem: removeItem,isAuthenticated:false,user:null,setUser:()=>{}}}>\n    __jsx(AppContext.Provider, {\n      value: {\n        cart: state.cart,\n        addItem: addItem,\n        removeItem: removeItem,\n        isAuthenticated: false,\n        user: user,\n        setUser: setUser\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\",\n      integrity: \"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    })), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }))))\n  );\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Rodney/mitXPro/MERN2021-01/w28/28.9_G-Ql/pages/_app.js"],"names":["useContext","useState","Head","AppContext","Home","Layout","Cookie","MyApp","props","cart","addItem","removeItem","user","setUser","state","setState","Component","pageProps","console","log","userToSet","item","items","foundItem","length","find","i","id","JSON","stringify","temp","parse","quantity","newCart","total","price","map","Object","assign","index","findIndex","splice","isAuthenticated"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport Head from \"next/head\";\r\nimport AppContext from \"../components/context\";\r\nimport Home from \"./index\"\r\nimport Layout from \"../components/layout\"\r\nimport Cookie from \"js-cookie\"\r\n\r\n\r\nfunction MyApp(props){\r\n  var {cart,addItem,removeItem, user, setUser} = useContext(AppContext)\r\n  const [state,setState] = useState({cart:cart});\r\n  const { Component, pageProps } = props;\r\n  \r\n  // more my stuff\r\n  console.log(\"_MyApp> user: \", user);\r\n\r\n  /*\r\n  setUser = (user) => {\r\n    setState({ user });\r\n\r\n    // more my stuff\r\n  console.log(\"_app > setUser-setState\", state);\r\n  };\r\n  */\r\n  setUser = (userToSet) => {\r\n  //  setState({ user });\r\n    console.log(\"_app > setUser-setState\", userToSet);\r\n    console.log(\"_app > AppContext: \", AppContext);\r\n    user = userToSet;\r\n\r\n    // more my stuff\r\n  };\r\n  addItem = (item) => {\r\n    let { items } = state.cart;\r\n    //check for item already in cart\r\n    //if not in cart, add item if item is found increase quanity ++\r\n    let foundItem = true;\r\n    if(items.length > 0){\r\n      foundItem = items.find((i) => i.id === item.id);\r\n     \r\n      if(!foundItem) foundItem = false;\r\n    }\r\n    else{\r\n      foundItem = false;\r\n    }\r\n    console.log(`Found Item value: ${JSON.stringify(foundItem)}`)\r\n    // if item is not new, add to cart, set quantity to 1\r\n    if (!foundItem) {\r\n      //set quantity property to 1\r\n    \r\n      let temp = JSON.parse(JSON.stringify(item));\r\n      temp.quantity = 1;\r\n      var newCart = {\r\n          items: [...state.cart.items,temp],\r\n          total: state.cart.total + item.price,\r\n      }\r\n      setState({cart:newCart})\r\n      console.log(`Total items: ${JSON.stringify(newCart)}`)\r\n    } else {\r\n      // we already have it so just increase quantity ++\r\n      console.log(`Total so far:  ${state.cart.total}`)\r\n      newCart= {\r\n          items: items.map((item) =>{\r\n            if(item.id === foundItem.id){\r\n              return Object.assign({}, item, { quantity: item.quantity + 1 })\r\n             }else{\r\n            return item;\r\n          }}),\r\n          total: state.cart.total + item.price,\r\n        }\r\n    }\r\n    setState({cart: newCart});  // problem is this is not updated yet\r\n    console.log(`state reset to cart:${JSON.stringify(state)}`)\r\n     \r\n  };\r\n  removeItem = (item) => {\r\n    let { items } = state.cart;\r\n    //check for item already in cart\r\n    const foundItem = items.find((i) => i.id === item.id);\r\n    if (foundItem.quantity > 1) {\r\n      var newCart = {\r\n        items: items.map((item) =>{\r\n        if(item.id === foundItem.id){\r\n          return Object.assign({}, item, { quantity: item.quantity - 1 })\r\n         }else{\r\n        return item;\r\n      }}),\r\n      total: state.cart.total - item.price,\r\n      }\r\n      //console.log(`NewCart after remove: ${JSON.stringify(newCart)}`)\r\n    } else { // only 1 in the cart so remove the whole item\r\n      console.log(`Try remove item ${JSON.stringify(foundItem)}`)\r\n      const index = items.findIndex((i) => i.id === foundItem.id);\r\n      items.splice(index, 1);\r\n      var newCart= { items: items, total: state.cart.total - item.price } \r\n    }\r\n    setState({cart:newCart});\r\n  }\r\n\r\n  return (\r\n//    <AppContext.Provider value={{cart: state.cart, addItem: addItem, removeItem: removeItem,isAuthenticated:false,user:null,setUser:()=>{}}}>\r\n    <AppContext.Provider value={{cart: state.cart, addItem: addItem, removeItem: removeItem,isAuthenticated:false,user:user,setUser:setUser}}>\r\n      <Head>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n          integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n      </Head>\r\n    \r\n      <Layout>\r\n          <Component {...pageProps} />\r\n      </Layout>\r\n\r\n    </AppContext.Provider>\r\n  );\r\n  \r\n}\r\n\r\n\r\nexport default MyApp;\r\n"]},"metadata":{},"sourceType":"module"}